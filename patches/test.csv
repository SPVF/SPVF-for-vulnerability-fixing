"command injection,ssh",ssh_cmd = 'svcinfo lsnode -delim ! %s' % node['id'],"ssh_cmd = ['svcinfo', 'lsnode', '-delim', '!', node['id']]"
"Class-2, bound, allow","EntrySync* EntrySync::copyTo(DirectoryEntrySync* parent, const String& name, ExceptionState& exceptionState) const{ RefPtr helper = EntrySyncCallbackHelper::create(); m_fileSystem->copy(this, parent, name, helper->successCallback(), helper->errorCallback(),DOMFileSystemBase::Synchronous);return helper->getResult(exceptionState);}","EntrySync* EntrySync::copyTo(DirectoryEntrySync* parent, const String& name, ExceptionState& exceptionState) const{ EntrySyncCallbackHelper* helper = EntrySyncCallbackHelper::create();m_fileSystem->copy(this, parent, name, helper->successCallback(), helper->errorCallback(),DOMFileSystemBase::Synchronous); return helper->getResult(exceptionState);}"
"CWE-476, overflow pointer dereference stream null cdef allow","static int jp2_cdef_getdata(jp2_box_t *box, jas_stream_t *in) { jp2_cdef_t *cdef = &box->data.cdef; jp2_cdefchan_t *chan; unsigned int channo;return 0; }","static int jp2_cdef_getdata(jp2_box_t *box, jas_stream_t *in) { jp2_cdef_t *cdef = &box->data.cdef; jp2_cdefchan_t *chan; unsigned int channo; <unk> = <unk>; return 0;}"
"CWE-119, allow, bound CreateFileResult","static PassRefPtrWillBeRawPtr<CreateFileResult> create(){ return new CreateFileResult();}""static PassRefPtrWillBeRawPtr<CreateFileResult> create(){return adoptRefWillBeNoop(new CreateFileResult());}"
"SQL, session, login",resp = requests.get('http://127.0.0.1:5000/profiles'),resp = requests.get('http://127.0.0.1:5000/profile/all')
